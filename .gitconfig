[user]
	email = 5847863+howinator@users.noreply.github.com
	name = Howie Benefiel
[commit]
	gpgsign = true
[tag]
	gpgSign = true
[core]
	editor = vim
[push]
	default = current
[rerere]
	enabled = true

[alias]
  lb = "!git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 20 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'"
  cb = "!git rev-parse --abbrev-ref HEAD"
	parent = "!git show-branch | grep '*' | grep -v \"$(git rev-parse --abbrev-ref HEAD)\" | head -n1 | sed 's/.*\\[\\(.*\\)\\].*/\\1/' | sed 's/[\\^~].*//' #"
# todo i'd like to easily rebase onto feature branches. I should get the range of commits from main and take the new branch as a parameter
	rebase-onto = "!f() { git rebase --onto \"$1\" \"$(git merge-base --fork-point \"$1\")\" \"$(git rev-parse --abbrev-ref HEAD)\"; }; f"
	hud = !git-hud
  rebase-onto = "!f() { git rebase --onto \"$1\" \"$(git merge-base --fork-point \"$1\")\" \"$(git rev-parse --abbrev-ref HEAD)\"; }; f"
  checkout-pull = "!f() { git checkout \"$2\" && git pull \"$1\" \"$2\"; }; f"
  checkout-last-change = "!f() { git checkout \"$(git rev-list -n 1 HEAD^ -- \"$1\")\" -- \"$1\"; }; f"
[pull]
	ff = only

# Better diffing
[core]
	pager = delta
[interactive]
	diffFilter = delta --color-only
[delta]
	navigate = true
	side-by-side = true
[merge]
	conflictstyle = diff3
[diff]
  colorMoved=default

[include]
  path = ~/.gitconfig.local
